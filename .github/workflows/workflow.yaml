name: Frontend Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      # ... (your existing steps for linting and testing)

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    outputs:
      env: 
        IMAGE_TAG: ${{ steps.set-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install Dependencies
        working-directory: ./src
        run: npm ci

      - name: Set Image Tag
        id: set-image-tag
        run: echo "::set-output name=image_tag::udac:${{ github.sha }}"

      - name: Build Docker image
        working-directory: ./
        run: |
          docker build -t ${{ steps.set-image-tag.outputs.image_tag }} .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: AWS ECR Login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Pull the image
        run: docker pull udac:${{ needs.build.outputs.IMAGE_TAG }}

      - name: Tag the image
        run: |
          docker tag udac:${{ needs.build.outputs.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/udac:${{ needs.build.outputs.IMAGE_TAG }}

      - name: Push to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/udac:${{ needs.build.outputs.IMAGE_TAG }}
          

      # - name: Use kubectl
      #   uses: azure/k8s-set-context@v1
      #   with:
      #     method: kubeconfig
      #     kubeconfig: ${{ secrets.KUBE_CONFIG }}
# ${{ github.sha }}
      # - name: Deploy to Kubernetes
      #   run: kubectl apply -f kubernetes-manifests/
