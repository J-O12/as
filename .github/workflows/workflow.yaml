name: Frontend Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    # paths:
    #   - 'as/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install Dependencies
        working-directory: ./src
        run: npm ci

      - name: Run Lint
        run: npm run lint .

      - name: Handle Lint Errors
        if: failure()  # Run only if lint failss
        run: npm lint --fix .

      - name: Run tests
        run: npm test

      - name: Handle Test Errors
        if: failure()  # Run only if tests fail
        run: echo "Tests failed. Please check and fix the issues."

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install Dependencies
        working-directory: ./src
        run: npm ci

      - name: Build Docker image
        working-directory: ./
        run: |
          docker build -t udac:${{ github.sha }} .


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: AWS ECR Login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag the image
        run: |
          docker tag udac:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/udac:${{ github.sha }}


      - name: Push to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/udac:${{ github.sha }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name jo

      - name: Install kustomize
        run: |
          KUSTOMIZE_VERSION=v4.1.3
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin
          kustomize version

      - name: Deploy image to amazon EKS
        run: | 
          kubectl apply -f ./k8s/aws-auth.yaml
          kubectl apply -f ./k8s/deployment.yml
          kubectl apply -f ./k8s/service.yml
          
          
          
          
    # kubectl apply -f ./k8s/kustomization.yml



 